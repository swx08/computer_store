<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cy.store.mapper.AddressMapper">
<!--字段映射-->
    <resultMap id="ResultMapAddress" type="com.cy.store.entity.Address">
        <id column="aid" property="aid"/>
        <result column="province_name" property="provinceName"/>
        <result column="province_code" property="provinceCode"/>
        <result column="city_name" property="cityName"/>
        <result column="city_code" property="cityCode"/>
        <result column="area_name" property="areaName"/>
        <result column="area_code" property="areaCode"/>
        <result column="is_default" property="isDefault"/>
        <result column="created_user" property="createdUser"/>
        <result column="created_time" property="createdTime"/>
        <result column="modified_user" property="modifiedUser"/>
        <result column="modified_time" property="modifiedTime"/>
    </resultMap>

<!--插入用户的收货地址数据    Integer insert(Address address); 开启主键自增-->
    <insert id="insert" useGeneratedKeys="true" keyProperty="aid">
        INSERT INTO t_address (
            uid, `name`, province_name, province_code, city_name, city_code, area_name, area_code, zip,
            address, phone, tel,tag, is_default, created_user, created_time, modified_user, modified_time
        ) VALUES (
                     #{uid}, #{name}, #{provinceName}, #{provinceCode}, #{cityName}, #{cityCode}, #{areaName},
                     #{areaCode}, #{zip}, #{address}, #{phone}, #{tel}, #{tag}, #{isDefault}, #{createdUser},
                     #{createdTime}, #{modifiedUser}, #{modifiedTime}
                 )
    </insert>

<!--根据用户的uid统计收货地址数量    Integer countByUid(Integer uid);-->
    <select id="countByUid" resultType="java.lang.Integer">
        select count(*) from t_address where uid=#{uid}
    </select>

<!--根据用户的uid来查询地址    List<Address> findByUid(Integer uid);-->
    <select id="findByUid" resultMap="ResultMapAddress">
        select * from t_address where uid=#{uid}
        order by is_default DESC,created_time DESC
    </select>

<!--根据用户的uid值来修改用户的收货地址设置为非默认    Integer updateNonDefaultByUid(Integer uid);-->
    <update id="updateNonDefaultByUid">
        update t_address
        set is_default=0
        where uid=#{uid}
    </update>

<!--修改用户的默认收货地址    Integer updateDefaultByAid(Integer aid,String modifiedUser,String modifiedTime);-->
    <update id="updateDefaultByAid">
        update t_address
        set is_default=1,
            modified_user=#{modifiedUser},
            modified_time=#{modifiedTime}
        where aid=#{aid}
    </update>

<!--根据aid查询收货地址数据    Address findByAid(Integer aid);-->
    <select id="findByAid" resultMap="ResultMapAddress">
        select * from t_address where aid=#{aid}
    </select>

<!--根据收货地址的aid删除收货地址数据    Integer deleteByAid(Integer aid);-->
    <delete id="deleteByAid">
        delete from t_address where aid=#{aid}
    </delete>

<!--根据用户uid查询当前用户最后一次被修改的收货地址数据    Address findLastModified(Integer uid);-->
    <select id="findLastModified" resultMap="ResultMapAddress">
        select * from t_address
        where uid=#{uid}
        order by modified_time DESC limit 0,1
    </select>
</mapper>
